//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : CadastroDeVisitantes
	/// Data Source    : tcp:cadastrodevisitantes.database.windows.net,1433
	/// Server Version : 12.00.1800
	/// </summary>
	public partial class CadastroDeVisitantesDB : LinqToDB.Data.DataConnection
	{
		public ITable<Carro>                Carroes               { get { return this.GetTable<Carro>(); } }
		public ITable<DatabaseFirewallRule> DatabaseFirewallRules { get { return this.GetTable<DatabaseFirewallRule>(); } }
		public ITable<Pessoa>               Pessoas               { get { return this.GetTable<Pessoa>(); } }
		public ITable<Setor>                Setors                { get { return this.GetTable<Setor>(); } }
		public ITable<Usuario>              Usuarios              { get { return this.GetTable<Usuario>(); } }
		public ITable<Veiculo>              Veiculoes             { get { return this.GetTable<Veiculo>(); } }
		public ITable<VeiculoPessoa>        VeiculoPessoas        { get { return this.GetTable<VeiculoPessoa>(); } }
		public ITable<Visita>               Visitas               { get { return this.GetTable<Visita>(); } }

		public CadastroDeVisitantesDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public CadastroDeVisitantesDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Carro")]
	public partial class Carro
	{
		[PrimaryKey, Identity] public int    IDCarro { get; set; } // int
		[Column,     NotNull ] public string Marca   { get; set; } // varchar(50)
		[Column,     NotNull ] public string Modelo  { get; set; } // varchar(50)

		#region Associations

		/// <summary>
		/// FK_VEICULO_CARRO_BackReference
		/// </summary>
		[Association(ThisKey="IDCarro", OtherKey="IDCarro", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Veiculo> Veiculocarroes { get; set; }

		#endregion
	}

	[Table(Schema="sys", Name="database_firewall_rules", IsView=true)]
	public partial class DatabaseFirewallRule
	{
		[Column("id"),               Identity] public int      Id             { get; set; } // int
		[Column("name"),             NotNull ] public string   Name           { get; set; } // nvarchar(128)
		[Column("start_ip_address"), NotNull ] public string   StartIpAddress { get; set; } // varchar(45)
		[Column("end_ip_address"),   NotNull ] public string   EndIpAddress   { get; set; } // varchar(45)
		[Column("create_date"),      NotNull ] public DateTime CreateDate     { get; set; } // datetime
		[Column("modify_date"),      NotNull ] public DateTime ModifyDate     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Pessoa")]
	public partial class Pessoa
	{
		[PrimaryKey, Identity] public int    IDPessoa { get; set; } // int
		[Column,     NotNull ] public string CPF      { get; set; } // varchar(15)
		[Column,     NotNull ] public string Nome     { get; set; } // varchar(100)
		[Column,     NotNull ] public string Sexo     { get; set; } // varchar(5)
		[Column,     NotNull ] public string Telefone { get; set; } // varchar(30)

		#region Associations

		/// <summary>
		/// FK_VEICULOS_PESSOA_BackReference
		/// </summary>
		[Association(ThisKey="IDPessoa", OtherKey="IDPessoa", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<VeiculoPessoa> Veiculospessoas { get; set; }

		/// <summary>
		/// FK_VISITA_PESSOA_BackReference
		/// </summary>
		[Association(ThisKey="IDPessoa", OtherKey="IDPessoa", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Visita> Visitapessoas { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Setor")]
	public partial class Setor
	{
		[PrimaryKey, Identity   ] public int    IDSetor   { get; set; } // int
		[Column,     NotNull    ] public string Nome      { get; set; } // varchar(50)
		[Column,        Nullable] public string Descricao { get; set; } // varchar(300)

		#region Associations

		/// <summary>
		/// FK_VISITA_SETOR_BackReference
		/// </summary>
		[Association(ThisKey="IDSetor", OtherKey="IDSetor", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Visita> Visitasetors { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Usuario")]
	public partial class Usuario
	{
		[PrimaryKey, Identity] public int    IDUsuario   { get; set; } // int
		[Column,     NotNull ] public string NomeUsuario { get; set; } // varchar(50)
		[Column,     NotNull ] public string Senha       { get; set; } // varchar(100)
		[Column,     NotNull ] public string Tipo        { get; set; } // varchar(25)
	}

	[Table(Schema="dbo", Name="Veiculo")]
	public partial class Veiculo
	{
		[PrimaryKey, Identity] public int    IDVeiculo { get; set; } // int
		[Column,     NotNull ] public string Placa     { get; set; } // varchar(20)
		[Column,     NotNull ] public string Ano       { get; set; } // varchar(5)
		[Column,     NotNull ] public int    IDCarro   { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_VEICULO_CARRO
		/// </summary>
		[Association(ThisKey="IDCarro", OtherKey="IDCarro", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VEICULO_CARRO", BackReferenceName="Veiculocarroes")]
		public Carro VEICULOCARRO { get; set; }

		/// <summary>
		/// FK_VEICULOS_VEICULO_BackReference
		/// </summary>
		[Association(ThisKey="IDVeiculo", OtherKey="IDVeiculo", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<VeiculoPessoa> Veiculosveiculoes { get; set; }

		/// <summary>
		/// FK_VISITA_VEICULO_BackReference
		/// </summary>
		[Association(ThisKey="IDVeiculo", OtherKey="IDVeiculo", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Visita> Visitaveiculoes { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="VeiculoPessoa")]
	public partial class VeiculoPessoa
	{
		[PrimaryKey(1), NotNull] public int IDVeiculo { get; set; } // int
		[PrimaryKey(2), NotNull] public int IDPessoa  { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_VEICULOS_PESSOA
		/// </summary>
		[Association(ThisKey="IDPessoa", OtherKey="IDPessoa", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VEICULOS_PESSOA", BackReferenceName="Veiculospessoas")]
		public Pessoa VEICULOSPESSOA { get; set; }

		/// <summary>
		/// FK_VEICULOS_VEICULO
		/// </summary>
		[Association(ThisKey="IDVeiculo", OtherKey="IDVeiculo", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VEICULOS_VEICULO", BackReferenceName="Veiculosveiculoes")]
		public Veiculo VEICULOSVEICULO { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Visita")]
	public partial class Visita
	{
		[PrimaryKey(1), NotNull    ] public int      IDPessoa    { get; set; } // int
		[PrimaryKey(2), NotNull    ] public int      IDSetor     { get; set; } // int
		[Column,        NotNull    ] public DateTime DataEntrada { get; set; } // datetime
		[Column,        NotNull    ] public DateTime DataSaida   { get; set; } // datetime
		[Column,           Nullable] public int?     IDVeiculo   { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_VISITA_PESSOA
		/// </summary>
		[Association(ThisKey="IDPessoa", OtherKey="IDPessoa", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VISITA_PESSOA", BackReferenceName="Visitapessoas")]
		public Pessoa VISITAPESSOA { get; set; }

		/// <summary>
		/// FK_VISITA_SETOR
		/// </summary>
		[Association(ThisKey="IDSetor", OtherKey="IDSetor", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_VISITA_SETOR", BackReferenceName="Visitasetors")]
		public Setor VISITASETOR { get; set; }

		/// <summary>
		/// FK_VISITA_VEICULO
		/// </summary>
		[Association(ThisKey="IDVeiculo", OtherKey="IDVeiculo", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_VISITA_VEICULO", BackReferenceName="Visitaveiculoes")]
		public Veiculo VISITAVEICULO { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Carro Find(this ITable<Carro> table, int IDCarro)
		{
			return table.FirstOrDefault(t =>
				t.IDCarro == IDCarro);
		}

		public static Pessoa Find(this ITable<Pessoa> table, int IDPessoa)
		{
			return table.FirstOrDefault(t =>
				t.IDPessoa == IDPessoa);
		}

		public static Setor Find(this ITable<Setor> table, int IDSetor)
		{
			return table.FirstOrDefault(t =>
				t.IDSetor == IDSetor);
		}

		public static Usuario Find(this ITable<Usuario> table, int IDUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IDUsuario == IDUsuario);
		}

		public static Veiculo Find(this ITable<Veiculo> table, int IDVeiculo)
		{
			return table.FirstOrDefault(t =>
				t.IDVeiculo == IDVeiculo);
		}

		public static VeiculoPessoa Find(this ITable<VeiculoPessoa> table, int IDVeiculo, int IDPessoa)
		{
			return table.FirstOrDefault(t =>
				t.IDVeiculo == IDVeiculo &&
				t.IDPessoa  == IDPessoa);
		}

		public static Visita Find(this ITable<Visita> table, int IDPessoa, int IDSetor)
		{
			return table.FirstOrDefault(t =>
				t.IDPessoa == IDPessoa &&
				t.IDSetor  == IDSetor);
		}
	}
}

#pragma warning restore 1591
